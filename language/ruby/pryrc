#!/usr/bin/env ruby
# frozen_string_literal: true

Pry.commands.block_command(/!(\d+)/, 'Replay a line of history') do |line|
  run "history --replay #{line}"
end

Pry.config.commands.alias_command 'h', 'hist -T 20', desc: 'Last 20 commands'

Pry::Commands.block_command 'e', 'exit pry' do
  run exit
end

Pry.commands.alias_command 'l', 'whereami'
Pry.commands.alias_command 'bt', 'pry-backtrace'
Pry.commands.alias_command 'sm', 'show-method'
Pry.commands.alias_command 'dp', 'disable-pry'
Pry.commands.alias_command 'ee', 'exit-program'
Pry.commands.alias_command 'ds_pry', 'disable-pry'
Pry.commands.alias_command 'rl_pry', 'reload-code' # Reloads the code
Pry.commands.alias_command 'up', 'cd ..'

Pry.config.ls.separator = "\n" # new lines between methods
Pry.config.ls.heading_color = :magenta
Pry.config.ls.public_method_color = :green
Pry.config.ls.protected_method_color = :yellow
Pry.config.ls.private_method_color = :bright_black

default_command_set = Pry::CommandSet.new do
  command 'copy', 'Copy argument to the clip-board' do |str|
    IO.popen('pbcopy', 'w') { |f| f << str.to_s }
  end
end

Pry.config.commands.import default_command_set

def gemdir
  @gemdir ||= "#{`gem env gemdir`.chomp}/gems"
end

def load_non_bundled_plugins(plugin)
  gem_version = Dir.entries(gemdir).detect { |s| s[/^#{plugin}-[0-9]/] }
  if gem_version.nil?
    gem_version = `cd ~/.dotfiles/language/ruby && bundle info #{plugin} --path`.chomp
    gem_path = "#{gem_version}/lib"
  else
    gem_path = "#{gemdir}/#{gem_version}/lib"
  end
  $LOAD_PATH << gem_path
  require plugin
rescue LoadError
  puts "no #{plugin} :("
end

load_non_bundled_plugins('pry-reload')

load_non_bundled_plugins('byebug')
load_non_bundled_plugins('pry-byebug')
if defined?(PryByebug)
  Pry.commands.alias_command 'co', 'continue'
  Pry.commands.alias_command 'st', 'step'
  Pry.commands.alias_command 'ne', 'next'
  Pry.commands.alias_command 'fi', 'finish'
end

load_non_bundled_plugins('amazing_print')
if defined?(AmazingPrint)
  AmazingPrint.defaults = {
    indent: -1,
    sort_keys: true
  }
  AmazingPrint.pry!
end

if defined?(Rails)
  require 'rails/console/app'
  extend Rails::ConsoleMethods
end

load_non_bundled_plugins('readline')
load_non_bundled_plugins('rb-readline')
if defined?(RbReadline)
  def RbReadline.rl_reverse_search_history(_sign, _key)
    rl_insert_text `cat ~/.local/share/pry/pry_history |
    fzf --tac --height 16 |
    tr '\n' ' '`
  end
end

load_non_bundled_plugins('debug_inspector')
load_non_bundled_plugins('binding_of_caller')
load_non_bundled_plugins('pry-stack_explorer')
if defined?(PryStackExplorer)
  Pry.commands.alias_command 'fr', 'frame'
  Pry.commands.alias_command 'ss', 'stack'
end

class Array
  def self.toy(num = 10, &block)
    block_given? ? Array.new(num, &block) : Array.new(num) { |i| i + 1 }
  end
end

class Hash
  def self.toy(num = 10)
    Hash[Array.toy(num).zip(Array.toy(num) { |c| (96 + (c + 1)).chr })]
  end
end
